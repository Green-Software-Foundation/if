name: Release publish NPM / container image
# Temporarily disabled - uncomment to re-enable
on:
  # push:
  #   branches:
  #     - release
  # Dummy trigger to prevent workflow from running
  # To re-enable the workflow, simply uncomment the push trigger section and remove the workflow_dispatch section
  workflow_dispatch:
    inputs:
      dummy:
        description: 'Dummy input to prevent automatic triggering'
        required: false
        default: 'disabled'

jobs:
  final-check-before-release:
    runs-on: ubuntu-latest
    outputs:
      latest-release-name: ${{ steps.release-info.outputs.latest-release-name }}
      is-pre-release: ${{ steps.release-info.outputs.is-pre-release }}
      container-release-tag: ${{ steps.release-info.outputs.container-release-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

      - name: Run integration tests
        run: npm run if-check -- -d manifests/outputs

      - name: Archive checked source tree (to keep permissions)
        run: tar cfz /tmp/src.tar.gz .

      - name: Upload checked source tree for the release
        uses: actions/upload-artifact@v4
        with:
          name: src
          path: /tmp/src.tar.gz

      - name: Fetch latest release info
        id: release-info
        run: |
          RELEASE_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases")

          if [ $? -ne 0 ]; then
            echo "Failed to fetch releases"
            exit 1
          fi

          LATEST_RELEASE_NAME=$(echo "$RELEASE_JSON" | jq -r '.[0].name')
          IS_PRE_RELEASE=$(echo "$RELEASE_JSON" | jq -r '.[0].prerelease')

          echo "latest-release-name=$LATEST_RELEASE_NAME" >> $GITHUB_OUTPUT
          echo "is-pre-release=$IS_PRE_RELEASE" >> $GITHUB_OUTPUT
          if [ "$IS_PRE_RELEASE" == 'true' ]; then
            echo "container-release-tag=pre" >> $GITHUB_OUTPUT
          else
            echo "container-release-tag=latest" >> $GITHUB_OUTPUT
          fi

  release-publish-npm:
    needs: [ final-check-before-release ]
    runs-on: ubuntu-latest
    steps:
      - name: Download source tree for the release
        uses: actions/download-artifact@v4
        with:
          name: src
          path: ${{ github.workspace }}

      - name: Extract source tree
        run: tar xfz src.tar.gz

      - name: Initialize npm config
        run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm
        run: |
          CMD="npm publish"
          if [ "${{ needs.final-check-before-release.outputs.is-pre-release }}" == 'true' ]; then
            CMD="$CMD --tag beta"
          fi
          $CMD
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  release-container-image:
    needs: [ final-check-before-release ]
    permissions:
      packages: write
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
    steps:
      - name: Download source tree for the release
        uses: actions/download-artifact@v4
        with:
          name: src
          path: ${{ github.workspace }}

      - name: Extract source tree
        run: tar xfz src.tar.gz

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=${{ needs.final-check-before-release.outputs.container-release-tag }}
            type=raw,value=${{ needs.final-check-before-release.outputs.latest-release-name }}
            type=sha
          images: ${{ env.REGISTRY }}/${{ github.repository }}

      - name: Build and push container image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
